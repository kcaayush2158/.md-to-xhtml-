/* eslint-disable import/no-nodejs-modules */
/* eslint-disable no-undef */
/* eslint-disable no-prototype-builtins */
import axios from 'axios';
import * as fs from 'fs';

// Define the URL of the API endpoint
const apiUrl = 'https://jsonplaceholder.typicode.com/todos/1';

// Define the path where the interfaces will be saved
const outputPath = './src/app/interfaces/';

// Define the name of the interface and the corresponding filename
const interfaceName = 'Todo';
const fileName = `${interfaceName}.ts`;

// Fetch data from the API
axios.get(apiUrl)
  .then(response => {
    // Extract sample data from the API response
    const sampleData = response.data;

    // Generate TypeScript interface based on the sample data
    const interfaceCode = generateInterface(interfaceName, sampleData);

    // Write interface code to file
    fs.writeFileSync(outputPath + fileName, interfaceCode);

    console.log(`Interface "${interfaceName}" generated successfully at "${outputPath + fileName}"`);
  })
  .catch(error => {
    console.error('Error fetching data from API:', error);
  });

// Function to generate TypeScript interface
function generateInterface(name: string, data: any): string {
  let interfaceCode = `export interface ${name} {\n`;

  for (const key in data) {
    if (data.hasOwnProperty(key)) {
      const valueType = typeof data[key];
      const typeName = capitalizeFirstLetter(valueType);

      interfaceCode += `    ${key}: ${typeName};\n`;
    }
  }

  interfaceCode += '}\n';

  return interfaceCode;
}

// Function to capitalize the first letter of a string
function capitalizeFirstLetter(str: string): string {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
